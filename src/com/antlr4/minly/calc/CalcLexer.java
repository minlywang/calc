package com.antlr4.minly.calc;

// Generated from Calc.g4 by ANTLR 4.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CalcLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__10=1, T__9=2, T__8=3, T__7=4, T__6=5, T__5=6, T__4=7, T__3=8, T__2=9, 
		T__1=10, T__0=11, HexLiteral=12, DecimalLiteral=13, OctalLiteral=14, ID=15, 
		DOT=16, COLON=17, EQ=18, GT=19, LT=20, GE=21, LE=22, NE=23, ADD=24, SUB=25, 
		MUL=26, DIV=27, MOD=28, ASSIGN=29, COMMENT=30, WS=31, LINE_COMMENT=32;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'do'", "'stop'", "')'", "','", "'while'", "'('", "'require'", "'if'", 
		"'def'", "'\\'", "'\"'", "HexLiteral", "DecimalLiteral", "OctalLiteral", 
		"ID", "'.'", "':'", "'=='", "'>'", "'<'", "'>='", "'<='", "'!='", "'+'", 
		"'-'", "'*'", "'/'", "'%'", "'='", "COMMENT", "WS", "LINE_COMMENT"
	};
	public static final String[] ruleNames = {
		"T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", 
		"T__1", "T__0", "HexLiteral", "DecimalLiteral", "OctalLiteral", "EscapeSequence", 
		"OctalEscape", "UnicodeEscape", "HexDigit", "IntegerTypeSuffix", "Exponent", 
		"ID", "Letter", "JavaIDDigit", "DOT", "COLON", "EQ", "GT", "LT", "GE", 
		"LE", "NE", "ADD", "SUB", "MUL", "DIV", "MOD", "ASSIGN", "COMMENT", "WS", 
		"LINE_COMMENT"
	};


	public CalcLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Calc.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\"\u0110\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\3\2\3\2\3\2\3"+
		"\3\3\3\3\3\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b"+
		"\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\f"+
		"\3\f\3\r\3\r\3\r\6\r~\n\r\r\r\16\r\177\3\r\5\r\u0083\n\r\3\16\3\16\3\16"+
		"\7\16\u0088\n\16\f\16\16\16\u008b\13\16\5\16\u008d\n\16\3\16\5\16\u0090"+
		"\n\16\3\17\3\17\6\17\u0094\n\17\r\17\16\17\u0095\3\17\5\17\u0099\n\17"+
		"\3\20\3\20\3\20\3\20\5\20\u009f\n\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
		"\3\21\3\21\5\21\u00aa\n\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23"+
		"\3\24\3\24\3\25\3\25\5\25\u00b9\n\25\3\25\6\25\u00bc\n\25\r\25\16\25\u00bd"+
		"\3\26\3\26\3\26\7\26\u00c3\n\26\f\26\16\26\u00c6\13\26\3\27\3\27\3\30"+
		"\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\35\3\35\3\36\3\36"+
		"\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3"+
		"\'\3\'\3\'\3\'\7\'\u00f0\n\'\f\'\16\'\u00f3\13\'\3\'\3\'\3\'\3\'\3\'\3"+
		"(\6(\u00fb\n(\r(\16(\u00fc\3(\3(\3)\3)\3)\3)\7)\u0105\n)\f)\16)\u0108"+
		"\13)\3)\5)\u010b\n)\3)\3)\3)\3)\3\u00f1\2*\3\3\5\4\7\5\t\6\13\7\r\b\17"+
		"\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\2!\2#\2%\2\'\2)\2+\21-\2"+
		"/\2\61\22\63\23\65\24\67\259\26;\27=\30?\31A\32C\33E\34G\35I\36K\37M "+
		"O!Q\"\3\2\f\4\2ZZzz\n\2$$))^^ddhhppttvv\5\2\62;CHch\4\2NNnn\4\2GGgg\4"+
		"\2--//\16\2&&C\\aac|\u00c2\u00d8\u00da\u00f8\u00fa\u2001\u3042\u3191\u3302"+
		"\u3381\u3402\u3d2f\u4e02\ua001\uf902\ufb01\21\2\62;\u0662\u066b\u06f2"+
		"\u06fb\u0968\u0971\u09e8\u09f1\u0a68\u0a71\u0ae8\u0af1\u0b68\u0b71\u0be9"+
		"\u0bf1\u0c68\u0c71\u0ce8\u0cf1\u0d68\u0d71\u0e52\u0e5b\u0ed2\u0edb\u1042"+
		"\u104b\5\2\13\f\16\17\"\"\4\2\f\f\17\17\u011a\2\3\3\2\2\2\2\5\3\2\2\2"+
		"\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3"+
		"\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2"+
		"\2\2\35\3\2\2\2\2+\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67"+
		"\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2"+
		"\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2"+
		"\2Q\3\2\2\2\3S\3\2\2\2\5V\3\2\2\2\7[\3\2\2\2\t]\3\2\2\2\13_\3\2\2\2\r"+
		"e\3\2\2\2\17g\3\2\2\2\21o\3\2\2\2\23r\3\2\2\2\25v\3\2\2\2\27x\3\2\2\2"+
		"\31z\3\2\2\2\33\u008c\3\2\2\2\35\u0091\3\2\2\2\37\u009e\3\2\2\2!\u00a9"+
		"\3\2\2\2#\u00ab\3\2\2\2%\u00b2\3\2\2\2\'\u00b4\3\2\2\2)\u00b6\3\2\2\2"+
		"+\u00bf\3\2\2\2-\u00c7\3\2\2\2/\u00c9\3\2\2\2\61\u00cb\3\2\2\2\63\u00cd"+
		"\3\2\2\2\65\u00cf\3\2\2\2\67\u00d2\3\2\2\29\u00d4\3\2\2\2;\u00d6\3\2\2"+
		"\2=\u00d9\3\2\2\2?\u00dc\3\2\2\2A\u00df\3\2\2\2C\u00e1\3\2\2\2E\u00e3"+
		"\3\2\2\2G\u00e5\3\2\2\2I\u00e7\3\2\2\2K\u00e9\3\2\2\2M\u00eb\3\2\2\2O"+
		"\u00fa\3\2\2\2Q\u0100\3\2\2\2ST\7f\2\2TU\7q\2\2U\4\3\2\2\2VW\7u\2\2WX"+
		"\7v\2\2XY\7q\2\2YZ\7r\2\2Z\6\3\2\2\2[\\\7+\2\2\\\b\3\2\2\2]^\7.\2\2^\n"+
		"\3\2\2\2_`\7y\2\2`a\7j\2\2ab\7k\2\2bc\7n\2\2cd\7g\2\2d\f\3\2\2\2ef\7*"+
		"\2\2f\16\3\2\2\2gh\7t\2\2hi\7g\2\2ij\7s\2\2jk\7w\2\2kl\7k\2\2lm\7t\2\2"+
		"mn\7g\2\2n\20\3\2\2\2op\7k\2\2pq\7h\2\2q\22\3\2\2\2rs\7f\2\2st\7g\2\2"+
		"tu\7h\2\2u\24\3\2\2\2vw\7^\2\2w\26\3\2\2\2xy\7$\2\2y\30\3\2\2\2z{\7\62"+
		"\2\2{}\t\2\2\2|~\5%\23\2}|\3\2\2\2~\177\3\2\2\2\177}\3\2\2\2\177\u0080"+
		"\3\2\2\2\u0080\u0082\3\2\2\2\u0081\u0083\5\'\24\2\u0082\u0081\3\2\2\2"+
		"\u0082\u0083\3\2\2\2\u0083\32\3\2\2\2\u0084\u008d\7\62\2\2\u0085\u0089"+
		"\4\63;\2\u0086\u0088\4\62;\2\u0087\u0086\3\2\2\2\u0088\u008b\3\2\2\2\u0089"+
		"\u0087\3\2\2\2\u0089\u008a\3\2\2\2\u008a\u008d\3\2\2\2\u008b\u0089\3\2"+
		"\2\2\u008c\u0084\3\2\2\2\u008c\u0085\3\2\2\2\u008d\u008f\3\2\2\2\u008e"+
		"\u0090\5\'\24\2\u008f\u008e\3\2\2\2\u008f\u0090\3\2\2\2\u0090\34\3\2\2"+
		"\2\u0091\u0093\7\62\2\2\u0092\u0094\4\629\2\u0093\u0092\3\2\2\2\u0094"+
		"\u0095\3\2\2\2\u0095\u0093\3\2\2\2\u0095\u0096\3\2\2\2\u0096\u0098\3\2"+
		"\2\2\u0097\u0099\5\'\24\2\u0098\u0097\3\2\2\2\u0098\u0099\3\2\2\2\u0099"+
		"\36\3\2\2\2\u009a\u009b\7^\2\2\u009b\u009f\t\3\2\2\u009c\u009f\5#\22\2"+
		"\u009d\u009f\5!\21\2\u009e\u009a\3\2\2\2\u009e\u009c\3\2\2\2\u009e\u009d"+
		"\3\2\2\2\u009f \3\2\2\2\u00a0\u00a1\7^\2\2\u00a1\u00a2\4\62\65\2\u00a2"+
		"\u00a3\4\629\2\u00a3\u00aa\4\629\2\u00a4\u00a5\7^\2\2\u00a5\u00a6\4\62"+
		"9\2\u00a6\u00aa\4\629\2\u00a7\u00a8\7^\2\2\u00a8\u00aa\4\629\2\u00a9\u00a0"+
		"\3\2\2\2\u00a9\u00a4\3\2\2\2\u00a9\u00a7\3\2\2\2\u00aa\"\3\2\2\2\u00ab"+
		"\u00ac\7^\2\2\u00ac\u00ad\7w\2\2\u00ad\u00ae\5%\23\2\u00ae\u00af\5%\23"+
		"\2\u00af\u00b0\5%\23\2\u00b0\u00b1\5%\23\2\u00b1$\3\2\2\2\u00b2\u00b3"+
		"\t\4\2\2\u00b3&\3\2\2\2\u00b4\u00b5\t\5\2\2\u00b5(\3\2\2\2\u00b6\u00b8"+
		"\t\6\2\2\u00b7\u00b9\t\7\2\2\u00b8\u00b7\3\2\2\2\u00b8\u00b9\3\2\2\2\u00b9"+
		"\u00bb\3\2\2\2\u00ba\u00bc\4\62;\2\u00bb\u00ba\3\2\2\2\u00bc\u00bd\3\2"+
		"\2\2\u00bd\u00bb\3\2\2\2\u00bd\u00be\3\2\2\2\u00be*\3\2\2\2\u00bf\u00c4"+
		"\5-\27\2\u00c0\u00c3\5-\27\2\u00c1\u00c3\5/\30\2\u00c2\u00c0\3\2\2\2\u00c2"+
		"\u00c1\3\2\2\2\u00c3\u00c6\3\2\2\2\u00c4\u00c2\3\2\2\2\u00c4\u00c5\3\2"+
		"\2\2\u00c5,\3\2\2\2\u00c6\u00c4\3\2\2\2\u00c7\u00c8\t\b\2\2\u00c8.\3\2"+
		"\2\2\u00c9\u00ca\t\t\2\2\u00ca\60\3\2\2\2\u00cb\u00cc\7\60\2\2\u00cc\62"+
		"\3\2\2\2\u00cd\u00ce\7<\2\2\u00ce\64\3\2\2\2\u00cf\u00d0\7?\2\2\u00d0"+
		"\u00d1\7?\2\2\u00d1\66\3\2\2\2\u00d2\u00d3\7@\2\2\u00d38\3\2\2\2\u00d4"+
		"\u00d5\7>\2\2\u00d5:\3\2\2\2\u00d6\u00d7\7@\2\2\u00d7\u00d8\7?\2\2\u00d8"+
		"<\3\2\2\2\u00d9\u00da\7>\2\2\u00da\u00db\7?\2\2\u00db>\3\2\2\2\u00dc\u00dd"+
		"\7#\2\2\u00dd\u00de\7?\2\2\u00de@\3\2\2\2\u00df\u00e0\7-\2\2\u00e0B\3"+
		"\2\2\2\u00e1\u00e2\7/\2\2\u00e2D\3\2\2\2\u00e3\u00e4\7,\2\2\u00e4F\3\2"+
		"\2\2\u00e5\u00e6\7\61\2\2\u00e6H\3\2\2\2\u00e7\u00e8\7\'\2\2\u00e8J\3"+
		"\2\2\2\u00e9\u00ea\7?\2\2\u00eaL\3\2\2\2\u00eb\u00ec\7\61\2\2\u00ec\u00ed"+
		"\7,\2\2\u00ed\u00f1\3\2\2\2\u00ee\u00f0\13\2\2\2\u00ef\u00ee\3\2\2\2\u00f0"+
		"\u00f3\3\2\2\2\u00f1\u00f2\3\2\2\2\u00f1\u00ef\3\2\2\2\u00f2\u00f4\3\2"+
		"\2\2\u00f3\u00f1\3\2\2\2\u00f4\u00f5\7,\2\2\u00f5\u00f6\7\61\2\2\u00f6"+
		"\u00f7\3\2\2\2\u00f7\u00f8\b\'\2\2\u00f8N\3\2\2\2\u00f9\u00fb\t\n\2\2"+
		"\u00fa\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fc\u00fd"+
		"\3\2\2\2\u00fd\u00fe\3\2\2\2\u00fe\u00ff\b(\2\2\u00ffP\3\2\2\2\u0100\u0101"+
		"\7\61\2\2\u0101\u0102\7\61\2\2\u0102\u0106\3\2\2\2\u0103\u0105\n\13\2"+
		"\2\u0104\u0103\3\2\2\2\u0105\u0108\3\2\2\2\u0106\u0104\3\2\2\2\u0106\u0107"+
		"\3\2\2\2\u0107\u010a\3\2\2\2\u0108\u0106\3\2\2\2\u0109\u010b\7\17\2\2"+
		"\u010a\u0109\3\2\2\2\u010a\u010b\3\2\2\2\u010b\u010c\3\2\2\2\u010c\u010d"+
		"\7\f\2\2\u010d\u010e\3\2\2\2\u010e\u010f\b)\2\2\u010fR\3\2\2\2\24\2\177"+
		"\u0082\u0089\u008c\u008f\u0095\u0098\u009e\u00a9\u00b8\u00bd\u00c2\u00c4"+
		"\u00f1\u00fc\u0106\u010a\3\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}